from timeme import Timer

@Timer(name='sorting_experiment', trials=100)
def bubbleSort(arr):
    """
    a simple example taken from geeksforgeeks.org
    source: https://www.geeksforgeeks.org/bubble-sort/
    """
    n = len(arr)
    for i in range(n):
        for j in range(0, n-i-1):
            if arr[j] > arr[j+1]:
                arr[j], arr[j+1] = arr[j+1], arr[j]
    return arr

@Timer(name='sorting_experiment', trials=100)
def mergeSort(arr):
    """
    a simple example taken from geeksforgeeks.org
    source: https://www.geeksforgeeks.org/merge-sort/
    """
    if len(arr) <= 1:
        return
    mid = len(arr)//2
    L = arr[:mid]
    R = arr[mid:]
    mergeSort(L)
    mergeSort(R)
    i, j, k = [0]*3
    while i < len(L) and j < len(R):
        if L[i] < R[j]:
            arr[k] = L[i]
            i += 1
        else:
            arr[k] = R[j]
            j += 1
        k += 1

    while i < len(L):
        arr[k] = L[i]
        i += 1
        k += 1

    while j < len(R):
        arr[k] = R[j]
        j += 1
        k += 1
    return arr


if __name__ == '__main__':
    sample = [1,2,5,4,3]
    thing = bubbleSort(sample, timeme=True)
    thing = mergeSort(sample, timeme=True)
    experiment = Timer.records['sorting_experiment']
    print('bubble sort stats: ', experiment['bubbleSort'].aggregate)
    print('merge sort stats: ', experiment['mergeSort'][-1].aggregate)


